@use 'common.scss';
@use "sass:string";

:root {
  --aladin-image-saturation: 1;
  --aladin-image-brightness: 1;
}

$saturation: var(--aladin-image-saturation);
$brightness: var(--aladin-image-brightness);

/* stylelint-disable-next-line selector-class-pattern */
.aladin-imageCanvas {
  filter: #{saturate}(string.unquote($saturation)) brightness(string.unquote($brightness));
}

.aladin-container {
  overflow: hidden; // Needed to keep the visualization svg inside the component
  outline: none;
  pointer-events: none;

  @media (min-width: common.$mobile-responsive-cutoff) {
    pointer-events: initial;
  }
}

.aladin-target-disable-mouse {
  pointer-events: none;
}

.aladin-container-body {
  grid-area: aladin;
  position: relative;
}

.visualization-display {
  display: inline !important; // we use this as a toggle thus we need important set
}

.visualization-overlay-svg {
  position: absolute;
  pointer-events: none; // let aladin get pointer events
  z-index: 40;

  .viz-polygon {
    stroke: gray;
    stroke-width: 2px;
    fill: none;
    vector-effect: non-scaling-stroke;
  }

  .gmos-probe-arm {
    stroke: hsl(0deg 67.9% 41.6%);
  }

  .gmos-patrol-field {
    stroke: hsl(120deg 100% 50%);
    fill: none;
    stroke-width: 1px;
    stroke-dasharray: 10;
  }

  .gmos-fpu>polygon {
    stroke: blue;
    stroke-width: 0.8px;
    fill: lightgray;
    fill-opacity: 0.1;
  }

  .gmos-science-area polygon {
    display: none;
    stroke: purple;
    fill: black;
    fill-opacity: 1;
  }

  .gmos-science-ccd-offset polygon {
    display: none;
    stroke: yellow;
    fill-opacity: 0.1;
  }

  .gmos-science-ccd polygon {
    display: none;
    stroke: cyan;
    fill-opacity: 0.1;
  }

  .gmos-candidates-area {
    display: none;
    fill-opacity: 0;
    stroke: lightgreen;
    stroke-width: 0.4px;
    stroke-dasharray: 1.5;

    &.guide-star-candidate-target-visible {
      display: inline;
    }
  }

  .viz-svg-border {
    stroke: yellow;
    stroke-width: 2px;
    vector-effect: non-scaling-stroke;
    stroke-dasharray: 1;
  }

  .viz-svg-center {
    display: none;
    stroke: green;
    stroke-width: 2px;
    vector-effect: non-scaling-stroke;
  }
}

.targets-overlay-svg {
  pointer-events: none; // let aladin get pointer events
  position: absolute;
  z-index: 40;

  circle,
  line {
    vector-effect: non-scaling-stroke;
  }

  .crosshair-target {
    stroke: hsl(84deg 100% 29.2%);
    stroke-width: 2px;
  }

  .circle-target {
    display: none;
  }

  .science-target {
    fill: hsl(240deg 100.0% 60.2%);
    stroke: hsl(240deg 100.0% 60.2%);
    stroke-width: 1px;
  }

  .science-selected-target {
    fill: none;
    stroke: hsl(33deg 100.0% 50.0%);
    stroke-width: 1px;
  }

  .arrow-between-targets {
    stroke: darkblue;
    stroke-width: 2px;
    stroke-dasharray: 2;
  }

  .proper-motion-line-gs {
    display: none;

    &.guide-star-candidate-target-visible {
      display: inline;
    }
  }

  .overlay-all-targets {
    isolation: inline;
  }

  .offset-position {
    stroke-width: 1px;
    fill: none;
    stroke: hsla(51deg 100% 50% / 100%);
  }

  .guide-star-target,
  .guide-star-candidate-target {
    display: none;
    stroke-width: 1px;
    stroke: hsl(9deg 100% 83.9% / 80%);
    fill: none;

    &.guide-star-candidate-target-crowded {
      stroke-width: 0.5px;
      fill: hsl(9deg 100% 63.9% / 50%);
    }

    &.guide-star-candidate-target-visible {
      display: inline;
    }

    &.guide-star-vignetted {
      stroke: red;
      stroke-width: 1px;
      fill: hsl(9deg 100% 63.9% / 80%);
    }

    // fast -> green
    &.guide-star-fast {
      stroke-width: 1px;
      stroke: hsl(120deg 60.7% 33.9%);
      fill: var(--ags-fast-guide-speed-color);
      fill-opacity: 0.7;
    }

    // medium -> yellow
    &.guide-star-medium {
      stroke-width: 1px;
      stroke: hsl(43deg 74.4% 69.0%);
      fill: var(--ags-medium-guide-speed-color);
      fill-opacity: 0.8;
    }

    // slow -> orange
    &.guide-star-slow {
      stroke-width: 1px;
      stroke: hsl(39deg 100.0% 50.0%);
      fill: var(--ags-slow-guide-speed-color);
      fill-opacity: 0.8;
    }

    // faint -> red
    &.guide-star-too-faint {
      stroke-width: 1px;
      stroke: hsl(9deg 100.0% 63.9%);
      fill: hsl(0deg 100.0% 50.0%);
      fill-opacity: 0.5;
    }

  }

  .guide-star-target {
    display: inline;
  }

  .guide-star-candidate-target-base {
    display: none;
    stroke: black;
    stroke-width: 0.5px;
    fill: yellow;
    fill-opacity: 0.4;
    isolation: initial;
  }
}

.viz-guides {
  display: none;
}

.p-menu.p-component.explore-aladin-settings-menu {
  background: var(--button-background-color-semi);
  border-color: var(--site-border-color);
  /* stylelint-disable-next-line csstools/value-no-unknown-custom-properties */
  font-size: var(--pl-mini-font-size);
  width: 14em;

  .p-menuitem-link {
    padding: 0.6em;

    // otherwise, the slider handle can stick out too far.
    &:has(.aladin-range-control) {
      padding-right: 1rem;
    }

    .aladin-range-control {
      width: 100%;

      .p-slider {
        width: 100%;
      }
    }
  }
}

.p-button.p-button-icon-only.explore-aladin-button,
.p-button.explore-aladin-button {
  background: var(--button-background-color-semi);
  border-color: var(--gray-500);
  padding: 0.3em;
  margin-right: 0;
  aspect-ratio: 1;
  max-width: 30px;
  max-height: 30px;

  &:enabled:focus,
  &:enabled:hover {
    background: var(--gray-700);
    border-color: var(--gray-200);
    box-shadow: 0 0 0 0.5px var(--gray-200);
  }
}

@mixin aladin-button-mixin {
  position: absolute;
  z-index: 120;
  padding: 0.3em;
  aspect-ratio: 1;
}

.explore-aladin-zoom-control {
  @include aladin-button-mixin;

  right: 10px;
  top: 50%;
  display: flex;
  flex-direction: column;
}

.explore-aladin-search-zoom-control {
  top: 40%;
}

.p-button.explore-aladin-fullscreen-button {
  margin: 0;

  /* stylelint-disable-next-line selector-class-pattern */
  svg.svg-inline--fa {
    width: auto;
  }
}

.explore-aladin-fullscreen-button {
  @include aladin-button-mixin;

  right: 5px;
  top: 10px;
}

.explore-aladin-toolbox-button {
  @include aladin-button-mixin;

  top: 10px;
  left: 10px;

  .p-button.p-button-icon-only.explore-aladin-button,
  .p-button.explore-aladin-button {
    position: absolute;
  }
}

.ags-overlay {
  position: absolute;
  z-index: 120;
  margin: 1em;
  padding: 0.3em 1em;
  font-size: smaller;
  bottom: 30px;
  color: var(--hud-color);
  border: 1px solid var(--hud-color);
  border-radius: 3px;
  background: var(--hud-background-color);

  .fa-bahai {
    color: var(--ags-icon-color);
    margin-right: 0.3em;
  }

  .ags-description {
    @include common.text-ellipsis;

    display: flex;
    gap: 0.1em;
    align-items: center;

    .ags-navigation {
      margin-left: 0.3em;
    }

    .ags-navigation-button {
      cursor: pointer;
      padding: {
        left: 0.2em !important;
        right: 0.2em !important;
      }

      /* stylelint-disable-next-line selector-class-pattern */
      svg.svg-inline--fa {
        color: var(--gray-50);
        width: auto;
        margin-right: 0;
      }
    }

    .ags-guide-speed {
      text-transform: capitalize;
    }

    .ags-g-brightness {
      margin-left: 0.3em;
    }

    .ags-coordinates {
      margin-left: 0.3em;
      font-weight: bold;
    }

    /* stylelint-disable-next-line selector-class-pattern */
    .svg-inline--fa {
      margin-right: 0.3em;
    }
  }

  .ags-fast-color {
    color: var(--ags-fast-guide-speed-color);
  }

  .ags-medium-color {
    color: var(--ags-medium-guide-speed-color);
  }

  .ags-slow-color {
    color: var(--ags-slow-guide-speed-color);
  }
}

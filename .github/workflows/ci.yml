# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.2.0]
        java: [temurin@17]
        project: [rootJS, rootJVM]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Java (temurin@17)
        id: download-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 17
          jdkFile: ${{ steps.download-java-temurin-17.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: npm install --force
        run: npm install --force

      - name: Check that workflows are up to date
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++${{ matrix.scala }}' 'project /' githubWorkflowCheck

      - name: Check headers and formatting
        if: matrix.java == 'temurin@17'
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++${{ matrix.scala }}' headerCheckAll scalafmtCheckAll 'project /' scalafmtSbtCheck lucumaScalafmtCheck lucumaScalafixCheck

      - name: scalaJSLink
        if: matrix.project == 'rootJS'
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++${{ matrix.scala }}' Test/scalaJSLinkerResult

      - name: Test
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++${{ matrix.scala }}' test

      - name: Check scalafix lints
        if: matrix.java == 'temurin@17'
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++${{ matrix.scala }}' 'scalafixAll --check'

      - name: Aggregate coverage reports
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++${{ matrix.scala }}' coverageReport coverageAggregate

      - name: Upload code coverage data
        run: 'bash <(curl -s https://codecov.io/bash)'

  full:
    name: full
    if: ((github.ref == 'refs/heads/master' || github.event_name == 'pull_request') && startsWith(github.repository, 'gemini'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.2.0]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2

      - name: Download Java (temurin@17)
        id: download-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 17
          jdkFile: ${{ steps.download-java-temurin-17.outputs.jdkFile }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Stage
        run: sbt -v -J-Xmx6g '++${{ matrix.scala }}' stage

      - name: npm install --force
        run: npm install --force

      - name: Build application
        env:
          NODE_OPTIONS: '--max-old-space-size=8192'
        run: npm run build

      - name: override CI_COMMIT_SHA
        if: github.event_name == 'pull_request'
        run: echo "CI_COMMIT_SHA=${{ github.event.pull_request.head.sha}}" >> $GITHUB_ENV

      - name: Run BundleMon
        env:
          BUNDLEMON_PROJECT_ID: 61a698e5de59ab000954f941
          BUNDLEMON_PROJECT_APIKEY: ${{ secrets.BUNDLEMON_PROJECT_APIKEY }}
        run: yarn bundlemon

      - name: Deploy review app to Firebase
        if: (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]' && github.event.pull_request.head.repo.full_name == github.repository)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_EXPLORE_GEMINI }}
          projectId: explore-gemini
          target: staging

      - name: Deploy staging app to Firebase
        if: github.event_name == 'push'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_EXPLORE_GEMINI }}
          projectId: explore-gemini
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          target: staging
          channelId: live

  heroku:
    name: Deploy to Heroku
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master' && startsWith(github.repository, 'gemini'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.2.0]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2

      - name: Heroku - Provision static plugin
        run: 'heroku plugins:install heroku-cli-static'

      - name: Download Java (temurin@17)
        id: download-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 17
          jdkFile: ${{ steps.download-java-temurin-17.outputs.jdkFile }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Stage
        run: sbt -v -J-Xmx6g '++${{ matrix.scala }}' stage

      - name: npm install --force
        run: npm install --force

      - name: Build application
        env:
          NODE_OPTIONS: '--max-old-space-size=8192'
        run: npm run build

      - name: Heroku - Deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          cd ./heroku
          heroku static:deploy -a ${{ secrets.HEROKU_APP_NAME }}

  lint:
    name: Run linters
    if: (github.event_name == 'push' && startsWith(github.repository, 'gemini') && github.ref != 'refs/heads/master' && github.actor != 'dependabot[bot]')
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.2.0]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm

      - name: npm install --force
        run: npm install --force

      - name: Setup and expand vars dark
        run: |
          sed '/^[[:blank:]]*[\\.\\}\\@]/d;/^[[:blank:]]*\..*/d;/^[[:blank:]]*$/d;/\/\/.*/d' common/src/main/webapp/less/variables-dark.less > vars.css
          cat vars.css

      - name: Run linters in dark mode
        uses: wearerequired/lint-action@v1.11.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          stylelint: true
          stylelint_args: common/src/main/webapp/sass
          stylelint_extensions: css,sass,scss

      - name: Setup and expand vars light
        run: |
          sed '/^[[:blank:]]*[\\.\\}\\@]/d;/^[[:blank:]]*\..*/d;/^[[:blank:]]*$/d;/\/\/.*/d' common/src/main/webapp/less/variables-light.less > vars.css
          cat vars.css

      - name: Run linters in light mode
        uses: wearerequired/lint-action@v1.11.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          stylelint: true
          stylelint_args: common/src/main/webapp/sass
          stylelint_extensions: css,sass,scss

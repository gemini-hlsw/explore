# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}


concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3]
        java: [temurin@17]
        project: [rootJS, rootJVM]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt -v -J-Xmx6g +update

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      - name: npm clean-install
        run: npm clean-install

      - name: Check that workflows are up to date
        run: sbt -v -J-Xmx6g githubWorkflowCheck

      - name: Check headers and formatting
        if: matrix.java == 'temurin@17'
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' headerCheckAll scalafmtCheckAll 'project /' scalafmtSbtCheck lucumaScalafmtCheck lucumaScalafixCheck

      - name: Check scalafix lints
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' 'scalafixAll --check'

      - name: scalaJSLink
        if: matrix.project == 'rootJS'
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' Test/scalaJSLinkerResult

      - name: Test
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' test

      - name: Aggregate coverage reports
        run: sbt -v -J-Xmx6g 'project ${{ matrix.project }}' '++ ${{ matrix.scala }}' coverageReport coverageAggregate

      - name: Upload code coverage data
        uses: codecov/codecov-action@v3

  full:
    name: full
    if: ((github.ref == 'refs/heads/master' || github.event_name == 'pull_request') && startsWith(github.repository, 'gemini'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.3.1]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v4

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt -v -J-Xmx6g +update

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      - name: Stage
        run: sbt -v -J-Xmx6g '++ ${{ matrix.scala }}' stage

      - name: npm clean-install
        run: npm clean-install

      - name: Build application
        env:
          NODE_OPTIONS: '--max-old-space-size=8192'
        run: npm run build

      - name: override CI_COMMIT_SHA
        if: github.event_name == 'pull_request'
        run: echo "CI_COMMIT_SHA=${{ github.event.pull_request.head.sha}}" >> $GITHUB_ENV

      - name: Run BundleMon
        env:
          BUNDLEMON_PROJECT_ID: 61a698e5de59ab000954f941
          BUNDLEMON_PROJECT_APIKEY: ${{ secrets.BUNDLEMON_PROJECT_APIKEY }}
        run: yarn bundlemon

      - name: Deploy staging app to Firebase
        if: github.ref == 'refs/heads/master'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_EXPLORE_GEMINI }}
          projectId: explore-gemini
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          target: dev
          channelId: live

  lint:
    name: Run linters
    if: ((github.ref == 'refs/heads/master' || github.event_name == 'pull_request') && startsWith(github.repository, 'gemini') && github.actor != 'dependabot[bot]')
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.3.1]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v4

      - name: Setup Java (temurin@17)
        id: setup-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@17' && steps.setup-java-temurin-17.outputs.cache-hit == 'false'
        run: sbt -v -J-Xmx6g +update

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      - name: npm clean-install
        run: npm clean-install

      - name: Extract CSS files
        run: sbt -v -J-Xmx6g '++ ${{ matrix.scala }}' lucumaCss

      - name: Setup and expand vars dark
        run: |
          sed '/^[[:blank:]]*[\\.\\}\\@]/d;/^[[:blank:]]*\..*/d;/^[[:blank:]]*$/d;/\/\/.*/d' common/src/main/webapp/less/variables-dark.less > vars.css
          cat vars.css

      - name: Run linters in dark mode
        uses: wearerequired/lint-action@v2.3.0
        with:
          stylelint: true
          stylelint_extensions: css,sass,scss
          stylelint_args: common/src/main/webapp/sass
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prettier: true

      - name: Setup and expand vars light
        if: github.event_name != 'pull_request'
        run: |
          sed '/^[[:blank:]]*[\\.\\}\\@]/d;/^[[:blank:]]*\..*/d;/^[[:blank:]]*$/d;/\/\/.*/d' common/src/main/webapp/less/variables-light.less > vars.css
          cat vars.css

      - name: Run linters in light mode
        if: github.event_name != 'pull_request'
        uses: wearerequired/lint-action@v2.3.0
        with:
          stylelint: true
          stylelint_extensions: css,sass,scss
          stylelint_args: common/src/main/webapp/sass
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prettier: true
